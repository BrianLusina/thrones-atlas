version: "3.0"

services:
        client:
                build: ./client
                env_file: ./client/.env
                ports:
                        - "3000:3000"
                expose:
                        - "5000"
                deploy:
                        replicas: 3
                        restart_policy:
                                condition: on-failure
                                delay: 5s
                                max_attempts: 5
                        update_config:
                                parallelism: 2
                                delay: 10s
                                failure_action: rollback
                depends_on:
                        - server

        server:
                build: ./server
                env_file: ./server/.env
                ports:
                        - "5000:5000"
                expose:
                        - "8000"
                networks:
                        - backend
                deploy:
                        replicas: 2
                        restart_policy:
                                condition: on-failure
                                delay: 3s
                                max_attempts: 3
                        update_config:
                                parallelism: 2
                                delay: 5s
                                failure_action: rollback
                depends_on:
                        - redis
                        - db

        redis:
                image: redis:latest
                ports: 
                        - "6379"
                deploy:
                        replicas: 2
                        update_config:
                                parallelism: 2
                                delay: 10s
                        restart_policy:
                                condition: on-failure
   
        db:
                image: mdillon/postgis
                ports:
                        - "5432:5432"
                env_file: .env
                networks:
                        - backend
                volumes:
                        - ./data/atlas_of_thrones.sql:/docker-entrypoint-initdb.d/atlas_of_thones.sql

volumes:
        data:

networks:
        backend: